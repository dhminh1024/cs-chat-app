[{"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/index.js":"1","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/App.js":"2","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/store.js":"3","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/components/PublicNavbar.js":"4","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/pages/LoginPage.js":"5","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/pages/HomePage.js":"6","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/components/AlertMsg.js":"7","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/pages/NotFoundPage.js":"8","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/pages/RegisterPage.js":"9","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/reducers/index.js":"10","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/actions/auth.actions.js":"11","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/reducers/auth.reducer.js":"12","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/apiService.js":"13","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/constants/auth.constants.js":"14","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/components/ConversationList.js":"15","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/config/constants.js":"16","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/components/Message.js":"17","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/components/SearchItem.js":"18","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/components/PaginationItem.js":"19","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/actions/user.actions.js":"20","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/constants/user.constants.js":"21","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/reducers/user.reducer.js":"22","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/routes/PrivateRoute.js":"23"},{"size":270,"mtime":1609831234511,"results":"24","hashOfConfig":"25"},{"size":1539,"mtime":1609920540435,"results":"26","hashOfConfig":"25"},{"size":344,"mtime":1609831234511,"results":"27","hashOfConfig":"25"},{"size":1489,"mtime":1609918145982,"results":"28","hashOfConfig":"25"},{"size":4845,"mtime":1609918230737,"results":"29","hashOfConfig":"25"},{"size":4398,"mtime":1609923120186,"results":"30","hashOfConfig":"25"},{"size":322,"mtime":1609831219799,"results":"31","hashOfConfig":"25"},{"size":359,"mtime":1609831219799,"results":"32","hashOfConfig":"25"},{"size":3707,"mtime":1609831852347,"results":"33","hashOfConfig":"25"},{"size":205,"mtime":1609918085340,"results":"34","hashOfConfig":"25"},{"size":2720,"mtime":1609908758490,"results":"35","hashOfConfig":"25"},{"size":1429,"mtime":1609905952539,"results":"36","hashOfConfig":"25"},{"size":1055,"mtime":1609920767394,"results":"37","hashOfConfig":"25"},{"size":987,"mtime":1609905529258,"results":"38","hashOfConfig":"25"},{"size":6068,"mtime":1609919529146,"results":"39","hashOfConfig":"25"},{"size":576,"mtime":1609923055265,"results":"40","hashOfConfig":"25"},{"size":993,"mtime":1609917816113,"results":"41","hashOfConfig":"25"},{"size":889,"mtime":1609917831190,"results":"42","hashOfConfig":"25"},{"size":1783,"mtime":1609917846484,"results":"43","hashOfConfig":"25"},{"size":1464,"mtime":1609917945117,"results":"44","hashOfConfig":"25"},{"size":403,"mtime":1609917936218,"results":"45","hashOfConfig":"25"},{"size":1164,"mtime":1609917910925,"results":"46","hashOfConfig":"25"},{"size":425,"mtime":1609920513122,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"162vzt9",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/index.js",[],["98","99"],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/App.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/store.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/components/PublicNavbar.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/pages/LoginPage.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/pages/HomePage.js",["100","101","102","103","104","105"],"import React, { useEffect } from \"react\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport ConversationList from \"../components/ConversationList\";\nimport Message from \"../components/Message\";\nimport { socketTypes, conversationTypes } from \"../config/constants.js\";\nimport { toast } from \"react-toastify\";\n\nimport socketIOClient from \"socket.io-client\";\nlet socket;\n\nconst HomePage = () => {\n  const [globalMessages, setGlobalMessages] = useState([]);\n  const [privateMessages, setPrivateMessages] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [selectedConversation, setSelectedConversation] = useState({\n    type: conversationTypes.GLOBAL,\n  });\n  const loading = useSelector((state) => state.user.loading);\n\n  const dispatch = useDispatch();\n  const accessToken = useSelector((state) => state.auth.accessToken);\n  const currentUser = useSelector((state) => state.auth.user);\n\n  const handleChangeMessage = (e) => {\n    setNewMessage(e.target.value);\n  };\n\n  const handleClickFriend = () => {};\n  const handleClickConversation = () => {};\n  const handleSendMessage = () => {};\n\n  useEffect(() => {\n    if (accessToken) {\n      socket = socketIOClient(process.env.REACT_APP_BACKEND_API, {\n        query: { accessToken },\n      });\n    }\n    return () => {\n      if (socket) socket.disconnect();\n    };\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (socket) {\n      socket.on(socketTypes.NOTIFICATION, (data) => {\n        if (data.onlineUsers) {\n          setOnlineUsers(data.onlineUsers);\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <Container fluid>\n      <br />\n\n      {selectedConversation.type === conversationTypes.GLOBAL ? (\n        <>\n          <h4>Global Room</h4>\n          <h6 className=\"text-success\">\n            {onlineUsers && (\n              <>\n                {onlineUsers.length < 2\n                  ? onlineUsers.length + \" user online\"\n                  : onlineUsers.length + \" users online\"}\n              </>\n            )}\n          </h6>\n        </>\n      ) : (\n        <>\n          <h4>\n            <img\n              src={selectedConversation.to?.avatarUrl}\n              alt=\"User Avatar\"\n              className=\"avatar-sm mr-3\"\n            />\n            <span>{selectedConversation.to?.name}</span>\n          </h4>\n          <h6>\n            {onlineUsers.includes(selectedConversation.to?._id) ? (\n              <span className=\"text-success\"> online</span>\n            ) : (\n              <span className=\"text-muted\"> offline</span>\n            )}\n          </h6>\n        </>\n      )}\n\n      <Row>\n        <Col md={4} className=\"p-3 border conversation-list\">\n          <ConversationList\n            onlineUsers={onlineUsers}\n            handleClickFriend={handleClickFriend}\n            handleClickConversation={handleClickConversation}\n          />\n        </Col>\n        <Col md={8} className=\"pr-4 d-flex flex-column justify-content-between\">\n          <ScrollToBottom className=\"messages border mb-2\">\n            <ul className=\"list-unstyled\">\n              {selectedConversation.type === conversationTypes.GLOBAL\n                ? globalMessages.map((msg) => (\n                    <Message key={msg._id} msg={msg} />\n                  ))\n                : privateMessages.map((msg, i) => (\n                    <Message key={msg._id} msg={msg} />\n                  ))}\n            </ul>\n          </ScrollToBottom>\n          <div>\n            <Form onSubmit={handleSendMessage}>\n              <Form.Row>\n                <Col>\n                  <Form.Control\n                    type=\"text\"\n                    required\n                    placeholder=\"Type something..\"\n                    name=\"newMessage\"\n                    value={newMessage}\n                    onChange={handleChangeMessage}\n                  />\n                </Col>\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  disabled={loading || !newMessage}\n                >\n                  Send\n                </Button>\n              </Form.Row>\n            </Form>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/components/AlertMsg.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/pages/NotFoundPage.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/pages/RegisterPage.js",["106","107"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport authActions from \"../redux/actions/auth.actions\";\n\nconst RegisterPage = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n  const [errors, setErrors] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n  const loading = useSelector((state) => state.auth.loading);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, email, password, password2 } = formData;\n    if (password !== password2) {\n      setErrors({ ...errors, password2: \"Passwords do not match\" });\n      return;\n    }\n    dispatch(authActions.register({ name, email, password }));\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col md={{ span: 6, offset: 3 }}>\n          <div className=\"text-center mb-3\">\n            <h1 className=\"text-primary\">Sign Up</h1>\n            <p className=\"lead\">Create Your Account</p>\n          </div>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleChange}\n              />\n              {errors.name && (\n                <small className=\"form-text text-danger\">{errors.name}</small>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Email Address\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n              />\n              {errors.email && (\n                <small className=\"form-text text-danger\">{errors.email}</small>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n              />\n              {errors.password && (\n                <small className=\"form-text text-danger\">\n                  {errors.password}\n                </small>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                name=\"password2\"\n                value={formData.password2}\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            {loading ? (\n              <Button\n                className=\"btn-block\"\n                variant=\"primary\"\n                type=\"button\"\n                disabled\n              >\n                <span\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n                Loading...\n              </Button>\n            ) : (\n              <Button className=\"btn-block\" type=\"submit\" variant=\"primary\">\n                Register\n              </Button>\n            )}\n\n            <p>\n              Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n","/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/reducers/index.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/actions/auth.actions.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/reducers/auth.reducer.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/apiService.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/constants/auth.constants.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/components/ConversationList.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/config/constants.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/components/Message.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/components/SearchItem.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/components/PaginationItem.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/actions/user.actions.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/constants/user.constants.js",[],["108","109"],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/redux/reducers/user.reducer.js",[],"/Users/minhdh/CoderSchool/FTW/demo/cs-chat-app/client/src/routes/PrivateRoute.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":9,"column":10,"nodeType":"116","messageId":"117","endLine":9,"endColumn":15},{"ruleId":"114","severity":1,"message":"118","line":15,"column":26,"nodeType":"116","messageId":"117","endLine":15,"endColumn":43},{"ruleId":"114","severity":1,"message":"119","line":16,"column":27,"nodeType":"116","messageId":"117","endLine":16,"endColumn":45},{"ruleId":"114","severity":1,"message":"120","line":19,"column":32,"nodeType":"116","messageId":"117","endLine":19,"endColumn":55},{"ruleId":"114","severity":1,"message":"121","line":24,"column":9,"nodeType":"116","messageId":"117","endLine":24,"endColumn":17},{"ruleId":"114","severity":1,"message":"122","line":26,"column":9,"nodeType":"116","messageId":"117","endLine":26,"endColumn":20},{"ruleId":"114","severity":1,"message":"123","line":1,"column":27,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"124","line":23,"column":9,"nodeType":"116","messageId":"117","endLine":23,"endColumn":16},{"ruleId":"110","replacedBy":"125"},{"ruleId":"112","replacedBy":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'setGlobalMessages' is assigned a value but never used.","'setPrivateMessages' is assigned a value but never used.","'setSelectedConversation' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'useEffect' is defined but never used.","'history' is assigned a value but never used.",["127"],["128"],"no-global-assign","no-unsafe-negation"]